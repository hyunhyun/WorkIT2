<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.mapper.MemoMapper">

	<!-- 이거에 접근할 때 namespace.id 로 접근한다. -->
	<!-- resultType은 자바의 타입과 매핑되는 것이 있다. 여기선 string이 java.lang.String과 매핑 -->
	<insert id="createMemo" useGeneratedKeys="true" keyProperty="teamID">
		insert into Memo(topicID, title, content, date, writer, responsable)
		values (#{topicID}, #{title}, #{content}, #{date}, #{writer}, #{responsable});
	</insert>
	
	
	<!-- 
			XML Mapper를 작성할 때 매번 resultType을 패키지까지 포함된 클래스명을 작성하는 일이 번거롭다면
			MyBatis의 설정 파일인 mybatis-config.xml을 사용해서 다음과 같이 <typeAliases>를 작성하면된다.
			<typeAliases>
				<package name = "org.zerock.domain"/>
			</typeAliases>		
	-->

	
	<select id="getMemoList" resultType="com.spring.model.MemoVO">
		select *
		from Memo 
		where topicID = #{topicID}
	</select>
	
	<select id="getMemo" resultType="com.spring.model.MemoVO">
		select * 
		from Memo
		where memoID = #{memoID}
	</select>
	
	<select id="getMemoResponsable" resultType="com.spring.model.MemoVO">
		select *
		from Memo
		where responsable = #{memberID}
	</select>
	
	<select id="searchMemoContent" resultType="com.spring.model.MemoVO">
		select *
		from Memo
		where content LIKE CONCAT('%',#{content},'%')
	</select>
	
	<delete id="deleteMemo">
		delete from Memo
		where memoID = #{memoID}
	</delete>
	
	<update id="updateMemo">
		update Memo 
		set 
		title = #{title}, 
		content = #{content},
		responsable = #{responsable} 
		where memoID = #{memoID}
	</update>

</mapper>